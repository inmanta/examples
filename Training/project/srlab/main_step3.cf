import srlinux
import srlinux::interface as srinterface
import srlinux::interface::subinterface as srsubinterface
import srlinux::interface::subinterface::ipv4 as sripv4
import srlinux::network_instance as srnetinstance
import srlinux::network_instance::protocols as srprotocols
import srlinux::network_instance::protocols::ospf as srospf
import srlinux::network_instance::protocols::ospf::instance as srospfinstance
import srlinux::network_instance::protocols::ospf::instance::area as srospfarea
import yang
import ip

"""
Basic entity based model with its instantiation
"""

entity Router:
    string name
    ip::ip mgmt_ip
    ip::ip loopback_ip
    ip::cidr[] ospf_networks
end

entity Port:
    string name
    ip::cidr ip
end

implement Port using std::none

Router.host [1] -- srlinux::GnmiDevice
Router.ports [0:] -- Port.router [1]

implementation router_config for Router:

    self.host = srlinux::GnmiDevice(
        auto_agent = true,
        name = self.name, 
        mgmt_ip = self.mgmt_ip,
        yang_credentials = yang::Credentials(
            username = "admin",
            password = "admin"
        )
    )

    # |network instance| #

    router_net_instance = srlinux::NetworkInstance(
        device = self.host,
        name = "default",
        router_id = self.loopback_ip
    )

    # |ospf instance| #
    
    router_protocols = srnetinstance::Protocols(
        parent_network_instance = router_net_instance,
        ospf = router_ospf
    )

    router_ospf_instance = srospf::Instance(
            parent_ospf = router_ospf,
            name = "1",
            router_id = self.loopback_ip,
            admin_state = "enable",
            version = "ospf-v2"
    )

    router_ospf = srprotocols::Ospf(
        parent_protocols = router_protocols,
        instance = router_ospf_instance
    )

    router_ospf_area = srospfinstance::Area(
        parent_instance = router_ospf_instance,
        area_id = "0.0.0.0",
    )

    # |loopback configuration| #

    router_lo = srlinux::Interface(
        device = self.host,
        name = "lo1", 
        subinterface = [router_lo_subint]
    )

    router_lo_subint = srinterface::Subinterface(
        parent_interface = router_lo,
        x_index = 0,
        ipv4 = router_lo_subint_address
    )

    router_lo_subint_address = srsubinterface::Ipv4(
        parent_subinterface = router_lo_subint,
        address = sripv4::Address(
            parent_ipv4 = router_lo_subint_address,
            ip_prefix = "{{self.loopback_ip}}/32" 
        )
    )

    for port in self.ports:

        # |interface configuration| #

        router_eth = srlinux::Interface(
            device = self.host,
            name = port.name, 
            mtu = 9000
        )

        router_eth_subint = srinterface::Subinterface(
            parent_interface = router_eth,
            x_index = 0,
            ipv4 = router_eth_subint_address
        )

        router_eth_subint_address = srsubinterface::Ipv4(
            parent_subinterface = router_eth_subint,
            address = sripv4::Address(
                parent_ipv4 = router_eth_subint_address,
                ip_prefix = port.ip 
            )
        )

        # set the network-instance this interface belongs to 
        router_net_instance_int = srnetinstance::Interface(
            parent_network_instance = router_net_instance,
            name = "{{port.name}}.0" 
        )
            
        # |ospf interface| #
        router_ospf_int = srospfarea::Interface(
            parent_area = router_ospf_area,
            interface_name = "{{port.name}}.0",
        )
 
    end

end

implement Router using router_config

# R1 instantiation

## Router
r1 = Router(
    name = "R1",
    mgmt_ip = "10.0.0.5",
    loopback_ip = "10.1.1.1",
    ospf_networks = ["10.1.0.0/30", "10.1.0.4/30", "10.1.0.12/30"]
)

## Interfaces
p11 = Port(
   name = "ethernet-1/1",
   ip = "10.1.0.1/30" 
)
p12 = Port(
   name = "ethernet-1/2",
   ip = "10.1.0.5/30" 
)
p13 = Port(
   name = "ethernet-1/3",
   ip = "10.1.0.13/30" 
)
p14 = Port(
   name = "ethernet-1/4",
   ip = "10.0.1.1/24" 
)

r1.ports = [p11, p12, p13, p14]

# R2 instantiation

## Router
r2 = Router(
    name = "R2",
    mgmt_ip = "10.0.0.6",
    loopback_ip = "10.1.1.2",
    ospf_networks = ["10.1.0.0/30", "10.1.0.8/30", "10.1.0.16/30"]
)

## Interfaces
p21 = Port(
   name = "ethernet-1/1",
   ip = "10.1.0.2/30" 
)
p22 = Port(
   name = "ethernet-1/2",
   ip = "10.1.0.9/30" 
)
p23 = Port(
   name = "ethernet-1/3",
   ip = "10.1.0.17/30" 
)
p24 = Port(
   name = "ethernet-1/4",
   ip = "10.0.2.1/24" 
)

r2.ports = [p21, p22, p23, p24]

# R3 instantiation

## Router
r3 = Router(
    name = "R3",
    mgmt_ip = "10.0.0.7",
    loopback_ip = "10.1.1.3",
    ospf_networks = ["10.1.0.4/30", "10.1.0.8/30", "10.1.0.20/30"]
)

## Interfaces
p31 = Port(
   name = "ethernet-1/1",
   ip = "10.1.0.6/30" 
)
p32 = Port(
   name = "ethernet-1/2",
   ip = "10.1.0.10/30" 
)
p33 = Port(
   name = "ethernet-1/3",
   ip = "10.0.1.21/30" 
)
p34 = Port(
   name = "ethernet-1/4",
   ip = "10.0.3.1/24" 
)

r3.ports = [p31, p32, p33, p34]

# R4 instantiation

## Router
r4 = Router(
    name = "R4",
    mgmt_ip = "10.0.0.8",
    loopback_ip = "10.1.1.4",
    ospf_networks = ["10.1.0.12/30", "10.1.0.16/30", "10.1.0.20/30"]
)

## Interfaces
p41 = Port(
   name = "ethernet-1/1",
   ip = "10.1.0.14/30" 
)
p42 = Port(
   name = "ethernet-1/2",
   ip = "10.1.0.18/30" 
)
p43 = Port(
   name = "ethernet-1/3",
   ip = "10.0.1.22/30" 
)
p44 = Port(
   name = "ethernet-1/4",
   ip = "10.0.4.1/24" 
)

r4.ports = [p41, p42, p43, p44]