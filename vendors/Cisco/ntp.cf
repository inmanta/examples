# import the Cisco module as an alias for easier access
import ciscoxr as c

# You can define the device information here for easier management
hostname = "router"      # Device hostname
mgmt_ip = "192.168.2.20" # Device management IP address
port = 21830             # Device NETCONF port
username = "admin"       # Device username
password = "admin"       # Device password

# Construct the router instance using the imported module name and feed it the information above
router = c::Device(
    name=hostname,
    mgmt_ip=mgmt_ip,
    port=port,
    username=username,
    password=password,
)

# Define an NTP VRF and assign a NTP peer to it
#
# Approach A - De-coupling NTP VRF configuration with NTP peer

ntp_default=c::Ntp(
    device=router,                      # Router is the instance we defined above
    vrf_name="default",                 # We use the default VRF
    )

c::Ntp_peer(
    ntp=ntp_default,                    # VRF for NTP  is the instance we defined above
    address_ipv4="128.66.0.1",          # The IP address of a NTP peer
    peer_type="server",                 # The type of the NTP peer
    source_interface="Loopback0",       # The source interface for the NTP connection
    preferred_peer=true,                # Preferred peer
    )


# Approach B - Coupling a ntp vrf configuration with a ntp peer

c::Ntp(
    device=router,                      # Router is the instance we defined above
    vrf_name="default",                 # We use the default VRF
    ntp_peer=c::Ntp_peer(
        address_ipv4="128.66.0.1",      # The ip address of a NTP peer
        peer_type="server",             # The type of the NTP peer
        source_interface="Loopback0",   # The source interface for the NTP connection
        preferred_peer=true,            # Preferred peer
        )
    )

