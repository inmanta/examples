pipeline {
    agent any

    triggers {
        cron(BRANCH_NAME == 'master' ? 'H H(2-5) * * *' : '')
    }

    options {
        disableConcurrentBuilds()
    }

    stages {
        stage('Update modules in registry') {
            steps {
                withCredentials([
                    string(
                        credentialsId: 'cloudsmith-api-key',
                        variable: 'CLOUDSMITH_API_KEY',
                    ),
                ]) {
                    sh '''
                        mkdir .cloudsmith
                        echo "[default]" > .cloudsmith/credentials.ini
                        echo api_key=${CLOUDSMITH_API_KEY} >> .cloudsmith/credentials.ini
                    '''
                    dir('yang') {
                        git(
                            branch: 'master',
                            url: 'https://code.inmanta.com/solutions/modules/yang.git',
                            poll: false,
                            changelog: false,
                            credentialsId: 'jenkins_on_gitlab_with_username',
                        )
                        sh '''
                            python3 -m venv venv
                            source venv/bin/activate
                            pip install inmanta-core cloudsmith-cli

                            # Get latest released version of module
                            latest=$(git describe --tags `git rev-list --tags --max-count=1`)
                            git checkout $latest

                            # Check if this version is already published on cloudsmith
                            cloudsmith --credentials-file ../.cloudsmith/credentials.ini \
                                ls pkgs inmanta/quickstart \
                                -q "version:$latest AND name:inmanta-module-yang" \
                                -F json > result.json
                            
                            if [ "$(cat result.json | jq '.data')" != "[]" ]; then
                                echo "Package inmanta-module-yang-${latest} has already been published"
                                exit 0
                            fi

                            # Build and publish the package
                            inmanta module build --byte-code .
                            cloudsmith \
                                --credentials-file ../.cloudsmith/credentials.ini \
                                push python inmanta/quickstart dist/*.whl
                        '''
                    }
                    dir('nokia_srlinux') {
                        git(
                            branch: 'v21',
                            url: 'https://code.inmanta.com/solutions/modules/nokia-srlinux.git',
                            poll: false,
                            changelog: false,
                            credentialsId: 'jenkins_on_gitlab_with_username',
                        )
                        sh '''
                            python3 -m venv venv
                            source venv/bin/activate
                            pip install inmanta-core cloudsmith-cli

                            # Get latest released version of module
                            latest=$(git describe --tags `git rev-list --tags --max-count=1`)
                            git checkout $latest

                            # Check if this version is already published on cloudsmith
                            cloudsmith --credentials-file ../.cloudsmith/credentials.ini \
                                ls pkgs inmanta/quickstart \
                                -q "version:$latest AND name:inmanta-module-nokia-srlinux" \
                                -F json > result.json
                            
                            if [ "$(cat result.json | jq '.data')" != "[]" ]; then
                                echo "Package inmanta-module-nokia-srlinux-${latest} has already been published"
                                exit 0
                            fi

                            # Build and publish the package
                            inmanta module build --byte-code .
                            cloudsmith \
                                --credentials-file ../.cloudsmith/credentials.ini \
                                push python inmanta/quickstart dist/*.whl
                        '''
                    }
                }
            }
        }
        stage('Build And Test') {
            stages {
                stage('Cleanup') {
                    steps {
                        sh '''
                            # Cleanup before starting
                            cd "Networking/SR Linux"
                            sudo rm -rf clab-srlinux
                            rm -f *.log
                            sudo clab destroy -t containerlab/topology.yml
                            rm -f .inmanta
                        '''
                    }
                }
                stage('Build') {
                    options {
                        timeout(time: 1, unit: 'HOURS')
                    }
                    steps {
                        sh '''
                            cd "Networking/SR Linux"
                            # Ensure we have the latest version of the srlinux image
                            sudo docker pull ghcr.io/nokia/srlinux:latest
                            sudo clab deploy -t containerlab/topology.yml --reconfigure
                            ci/do_test_deployment_and_verify.sh
                        '''
                    }
                }
            }
            post {
                always {
                    sh '''
                        cd "Networking/SR Linux"
                        sudo clab destroy -t containerlab/topology.yml
                        sudo rm -rf clab-srlinux
                    '''
                    archiveArtifacts artifacts: 'Networking/SR Linux/*.log'
                }
            }
        }
    }
    post {
        always {
            deleteDir()
        }
    }
}
