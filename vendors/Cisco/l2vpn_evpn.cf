# import the Cisco and Cisco services module as an alias for easier access
import ciscoxr as c
import ciscoxr_services as cs

# You can define the device information here for easier management
hostname = "router"      # Device hostname
mgmt_ip = "192.168.2.20" # Device management IP address
port = 21830             # Device NETCONF port
username = "admin"       # Device username
password = "admin"       # Device password

# Construct the router instance using the imported module name and feed it the information above
router = c::Device(
    name=hostname,
    mgmt_ip=mgmt_ip,
    port=port,
    username=username,
    password=password,
    auto_agent=true,
)


interface_evpn = c::Interface(                      # Instantiate Interface entity
    device=router,                                  # Link the defined router
    interface_name="GigabitEthernet0/0/0/5.20",     # Specify the interface name and its tag
    description="EVPN interface",                   # Set a description
    active="act",                                   # Activate the interface
    shutdown=false,                                 # Set the administrative state
    interface_mode_non_physical="l2-transport",     # Set the transport mode
)


l2vpn=cs::L2vpn(                                                                # Instantiate L2VPN entity
    device=router,                                                              # Link the defined router
    enable=true,                                                                # Enable it
    bridge_domain_groups = cs::Bridge_domain_groups(                            # Instantiate a bridge domain groups
        bridge_domain_group = cs::Bridge_domain_group(                          # Instantiate a bridge domain group
            name = "bridgeGroup",                                               # Specify a name
            bridge_domains = cs::Bridge_domains(                                # Instantiate bridge domains entity
                bridge_domain = cs::Bridge_domain(                              # Instantiate a bridge domain entity
                    name = "BDomain",                                           # Specify bridge domain's name
                    bd_attachment_circuits = cs::Bd_attachment_circuits(        # Instantiate attachment circuits entity
                        bd_attachment_circuit = cs::Bd_attachment_circuit(      # Instantiate attachment circuit entity
                            name = "GigabitEthernet0/0/0/5.20"                  # Specify the name of attachment circuit
                        )
                    ),
                    bridge_domain_evis = cs::Bridge_domain_evis(                # Instantiate bridge domain EVIs entity
                        bridge_domain_evi = cs::Bridge_domain_evi(              # Instantiate bridge domain EVI entity
                            eviid = 1234,                                       # Specify the EVI ID
                        )
                    )
                )
            )
        )
    )
)


evpn = cs::EVPN(                                                                    # Instantiate EVPN entity
    device=router,                                                                  # Link the defined router
    enable=true,                                                                    # Enable it
    evpn_tables = cs::EVPN_tables(                                                  # Instantiate EVPN tables entity
        evpnevis = cs::EVPNEVIS(                                                    # Instantiate an EVPN Instances entity
            evpnevi = cs::EVPNEVI(                                                  # Instantiate an EVPN Instance entity
                eviid = 1234,                                                       # Specify the EVI ID
                evpnnev_ibgp_auto_discovery = cs::EVPNnev_ibgp_auto_discovery(      # Instantiate EVPN iBGP auto discovery entity
                    evpn_route_distinguisher = cs::EVPN_route_distinguisher(        # Instantiate EVPN route distinguisher/RD
                        type = "two-byte-as",                                       # Specify the type
                        as_number = 200,                                            # Specify the AS number
                        as_index = 201,                                             # Specify the AS index
                    ),
                    evpn_route_targets = cs::EVPN_route_targets(                    # Instantiate EVPN route target/RT
                        evpn_route_target_as = cs::EVPN_route_target_as(            # Instantiate route target AS
                            format = "two-byte-as",                                 # Specify the format
                            role = "both",                                          # Specify the role
                            as_number = 200,                                        # Specify the AS number
                            as_index = 201,                                         # Specify the AS index
                            stitching = "no-stitching"                              # Specify stitching
                        )
                    )
                ),
                evpn_advertise_mac = cs::EVPN_advertise_mac(                        # Instantiate EVPN advertise MAC
                    enable = true                                                   # Enable it
                )
            )
        )
    )
)
